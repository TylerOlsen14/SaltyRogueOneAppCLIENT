{"version":3,"sources":["assets/logo.jpg","assets/SaltyRogueAddressScrapeScreeShot.png","assets/SaltyRoguePhoneRecordsScreenShot.png","components/Navigation.js","components/Home.js","components/address/components/UpdateAddressModal.js","components/address/components/ReadModal.js","components/address/components/AddressCard.js","components/address/Address.js","components/records/components/RecordModal.js","components/records/components/UpdateRecordModal.js","components/records/Records.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","state","isOpen","toggle","_this","setState","react_default","a","createElement","Navbar","color","dark","expand","className","Container","NavbarBrand","href","src","logo","alt","width","NavbarToggler","onClick","this","Collapse","navbar","Nav","NavItem","NavLink","Component","Home","style","textAlign","Button","margin","id","AddressScrape","PhoneRecords","UpdateAddressModal","modal","name","url","address","notes","console","log","componentWillMount","_callee","regenerator_default","wrap","_context","prev","next","props","scrape","stop","onChange","e","Object","defineProperty","target","value","newAddress","onSubmit","_callee2","_context2","preventDefault","fetch","_id","method","headers","Content-Type","body","JSON","stringify","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","for","Input","type","marginTop","block","ReadModal","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","asyncToGenerator","mark","data","_this2","then","res","json","key","AddressCard","onDeleteClick","_ref","resp","componentDidMount","_x","apply","arguments","_this3","map","Card","CardTitle","CardBody","CardText","CardFooter","components_ReadModal","components_UpdateAddressModal","refresh","getAddress","height","class","App","components_AddressCard","RecordModal","ClientName","ClientPhoneNumber","ClientNotes","newRecord","marginBottom","handleSubmit","placeholder","UpdateRecordModal","record","RecordList","records","getRecords","response","catch","error","components_RecordModal","ListGroup","react_transition_group","timeout","classNames","ListGroupItem","size","components_UpdateRecordModal","react_router_dom","components_Navigation","react_router","path","exact","component","Address","Records","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.47438b27.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.52b14cf9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/SaltyRogueAddressScrapeScreeShot.76c57045.png\";","module.exports = __webpack_public_path__ + \"static/media/SaltyRoguePhoneRecordsScreenShot.c4091322.png\";","import React, { Component } from 'react';\nimport { \n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Container\n} from  'reactstrap';\nimport logo from '../assets/logo.jpg'\n\nclass Navigation extends Component {\n  state = {\n    isOpen: false\n  }\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    })\n  }\n\n  render() {\n      return (\n        <div>\n          <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\n            <Container className=\"NavigationContainer\">\n              <NavbarBrand href=\"/\">\n                <img\n                  src={logo}\n                  alt=\"Salty Rogue Real Estate\" \n                  width=\"50px\"\n                  className=\"ImgNavBar\"\n                />\n                  Salty Rogue Real Estate\n              </NavbarBrand>\n              <NavbarToggler onClick={this.toggle} />\n              <Collapse isOpen={this.state.isOpen} navbar>\n                <Nav className=\"ml-auto\" navbar>\n                  <NavItem>\n                    <NavLink href=\"/Records\">Records</NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink href=\"/Address\">Address Book</NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink href=\"https://github.com/TylerOlsen14\">\n                      Github - TylerOlsen14\n                    </NavLink>\n                  </NavItem>\n                </Nav>\n              </Collapse>\n            </Container>\n          </Navbar>\n        </div>\n      )\n  }\n}\n\nexport default Navigation","import React from 'react';\nimport {\n  Button,\n  NavLink\n} from 'reactstrap';\nimport AddressScrape from '../assets/SaltyRogueAddressScrapeScreeShot.png'\nimport PhoneRecords from '../assets/SaltyRoguePhoneRecordsScreenShot.png'\n\nconst Home = () => {\n  return (\n    <div>\n      <div className=\"main\">\n        <div className=\"title\" style={{textAlign:\"center\"}}>\n          <h1>Salty Rogue Real Estate</h1>\n        </div>\n        <div className=\"HomeButtonGroup\">\n          <div className=\"addressScrape\">\n            <Button style={{margin:\"auto\"}} width=\"5rem\" id=\"HomeButton\">\n              <NavLink href=\"/address\" style={{color: \"white\"}}>\n                Address Book\n              </NavLink>\n            </Button>\n            <img\n              src={AddressScrape}\n              alt=\"Address Scrape\"\n              width=\"80%\"\n              className=\"HomeImage\"\n            />\n          </div>\n          <div className=\"phoneRecords\">\n            <Button style={{margin:\"auto\"}} width=\"5rem\" id=\"HomeButton\">\n              <NavLink href=\"/Records\" style={{color: \"white\"}}>\n                Records\n              </NavLink>\n            </Button>\n            <img\n              src={PhoneRecords}\n              alt=\"Phone Records\"\n              width=\"80%\"\n              className=\"HomeImage\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home","import React, { Component } from 'react';\nimport {\n  Button, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  Form, \n  FormGroup, \n  Label, \n  Input \n} from 'reactstrap';\n\nclass UpdateAddressModal extends Component {\n  state = {\n    modal: false,\n    name: '',\n    url: '',\n    address: '',\n    notes: '',\n  }\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n    console.log(this.state)\n  }\n\n  // enterModal = async () => {\n  componentWillMount = async () => {\n    this.setState({\n      name: this.props.scrape.name,\n      url: this.props.scrape.url,\n      address: this.props.scrape.address,\n      notes: this.props.scrape.notes\n    })\n  }\n\n  onChange = (e) => {\n    this.setState({ \n      [e.target.name]: e.target.value,\n    });\n  }\n  \n  newAddress = {\n    name: this.props.name,\n    url: this.props.url,\n    address: this.props.address,\n    notes: this.props.notes,\n  }\n\n  onSubmit = async e => {\n    e.preventDefault();\n    // await fetch(`http://localhost:5000/address`+ this.props.scrape._id, {\n    await fetch(`https://salty-address-scrape5kitchen.herokuapp.com/`+ this.props.scrape._id, {\n      method: \"PUT\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: this.state.name,\n        address: this.state.address,\n        url: this.state.url,\n        notes: this.state.notes,\n      }),\n    })\n    this.toggle();\n    console.log(this.state)\n    // this.props.refresh();//this refreshes the page after we're done\n  };\n\n  render() {\n    return(\n      <div>\n        <Button\n          color=\"secondary\"\n          onClick={this.toggle}\n          style={{width:\"150px\"}}\n        >\n          Update Record\n        </Button>\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n        >\n          <ModalHeader\n            // toggle={this.toggle}\n          >\n            Update Address Entry\n          </ModalHeader>\n          <ModalBody>\n            <Form>\n              <FormGroup>\n                <Label for=\"address\">\n                  Make sure the address & name look good\n                </Label>\n                <Input \n                  type=\"text\"\n                  name=\"name\"\n                  id=\"item\"\n                  // placeholder={Client Name}\n                  onChange={this.onChange}\n                  value={this.state.name}\n                />\n                <Input \n                  type=\"string\"\n                  name=\"url\"\n                  id=\"item\"\n                  // placeholder=\"Create Phone Number\"\n                  onChange={this.onChange}\n                  value={this.state.url}\n                />\n                <Input \n                  type=\"text\"\n                  name=\"address\"\n                  id=\"item\"\n                  // placeholder=\"Create coversation record\"\n                  onChange={this.onChange}\n                  value={this.state.address}\n                />\n                <Input \n                  type=\"textarea\"\n                  name=\"notes\"\n                  id=\"item\"\n                  // placeholder=\"Create coversation record\"\n                  onChange={this.onChange}\n                  value={this.state.notes}\n                />\n                <Button\n                  color=\"dark\"\n                  style={{marginTop: '2rem'}}\n                  block\n                  // onClick={this.handleSubmit}\n                  onClick={this.onSubmit}\n                >\n                  Update Entry\n                </Button>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default ( UpdateAddressModal );","import React, { Component } from 'react';\nimport { \n  Modal,\n  ModalBody,\n  ModalHeader,\n  Button\n } from 'reactstrap'\n\nclass ReadModal extends Component {\n  constructor() {\n    super();\n    this.state = { data: [] }\n  }\n\n  state = {\n    modal: false,\n    name: '',\n    url: '',\n    address: '',\n    notes: ''\n  }\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n    console.log(this.state)\n  }\n\n  componentDidMount() {\n    fetch(`https://salty-address-scrape5kitchen.herokuapp.com/`+ this.props.scrape._id)\n    .then(res => res.json())\n    .then(json => this.setState({ data: json }))\n  }\n\n  // enterModal = async () => {\n  componentWillMount = async () => {\n    this.setState({\n      name: this.props.scrape.name,\n      url: this.props.scrape.url,\n      address: this.props.scrape.address,\n      notes: this.props.scrape.notes\n    })\n  }\n  render() {\n    return (\n      <div>\n        <Button\n          color=\"primary\"\n          onClick={this.toggle}\n          className=\"ReadModalButton\"\n        >\n          Read Complete Entry\n        </Button>\n        <div className=\"ReadModal\">\n        {/* {this.state.data.map( scrape => ( */}\n          <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n          key={this.state._id}\n          className=\"ReadModal\"\n          >\n            <ModalHeader>\n              Client: {this.state.name}\n            </ModalHeader>\n            <ModalBody>\n              <h5>Address: {this.state.address}</h5>\n              url: {this.state.url}\n              <br/>\n              notes: {this.state.notes}\n              <div>\n                <Button\n                  color=\"danger\"\n                  onClick={this.toggle}\n                >\n                  X\n                </Button>\n              </div>\n            </ModalBody>\n          </Modal>\n        {/* ))} */}\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default ReadModal;","import React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\nimport { Card, CardText, CardBody, CardTitle, Button, CardFooter } from 'reactstrap'\nimport UpdateAddressModal from './UpdateAddressModal'\nimport ReadModal from './ReadModal'\n\nclass AddressCard extends Component{\n  constructor() {\n    super();\n    this.state = {data: []}\n  }\n\n  componentDidMount() {\n    fetch(`https://salty-address-scrape5kitchen.herokuapp.com/`)\n    // fetch(`http://localhost:5000/address`)\n      .then(res => res.json()) //put it all in JSON\n      .then(json => this.setState({ data: json })) // puts it back out as 'data'\n  }\n\n  onDeleteClick = async _id => {\n    await fetch(`https://salty-address-scrape5kitchen.herokuapp.com/`+ _id, {\n      method: 'DELETE'\n    }).then(resp => {\n      this.componentDidMount();\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"AddressCard\">\n        {this.state.data.map( scrape => (\n          <Card className=\"p-3 m-3\" style={{width:\"300px\"}} key={scrape._id}>\n            <CardTitle>{scrape.name}</CardTitle>\n            <CardBody>\n              <CardText className=\"Address\">{scrape.address}</CardText>\n              <CardText className=\"notes\">{scrape.notes}</CardText>\n            </CardBody>\n            <CardFooter>\n              <div className=\"ButtonGroup\">\n                <ReadModal scrape={scrape} />\n                <UpdateAddressModal scrape={scrape} refresh={this.getAddress} />\n                <button\n                  style={{height: '2.4em'}}\n                  onClick={() => this.onDeleteClick(scrape._id)}\n                  color=\"danger\"\n                >\n                  <i class=\"fas fa-trash-alt\"></i>\n                </button>\n              </div>\n            </CardFooter>\n          </Card>\n        ))}\n      </div>\n    )\n  }\n}\nexport default AddressCard","import React from 'react';\nimport AddressCard from './components/AddressCard'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <AddressCard />\n\n    </div>\n  );\n}\n\nexport default App;","import React, { Component } from 'react';\nimport {\n  Button, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  Form, \n  FormGroup, \n  Label, \n  Input \n} from 'reactstrap';\n\nclass RecordModal extends Component {\n  state = {\n    modal: false,\n    ClientName: '',\n    ClientPhoneNumber: '',\n    ClientNotes: '',\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    console.log(this.state)\n    this.props.onSubmit(this.state)\n  }\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  onChange = (e) => {\n    console.log(this.state)\n    this.setState({ \n      [e.target.name]: e.target.value,   \n    });\n  }\n\n  onSubmit = async e => {\n    e.preventDefault();\n    await fetch(`https://salty-rogue-kitchen3.herokuapp.com/`, {\n      method: \"POST\",\n      body: JSON.stringify(this.state),\n      headers: {\n          \"Content-Type\": \"application/json\",\n        }\n      }\n    )\n    this.toggle();\n    this.props.refresh();//this refreshes the page after we're done\n  };\n    \n  newRecord = {\n    ClientName: this.state.ClientName,\n    ClientPhoneNumber: this.state.ClientPhoneNumber,\n    ClientNotes: this.state.ClientNotes\n  }\n\n  render() {\n    return(\n      <div>\n        <Button\n          color=\"dark\"\n          style={{marginBottom: '2rem'}}\n          onClick={this.toggle}\n        >\n          Add Record\n        </Button>\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n        >\n          <ModalHeader\n            toggle={this.toggle}\n          >\n            Create New Record\n          </ModalHeader>\n          <ModalBody>\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup onSubmit={this.handleSubmit}>\n                <Label for=\"record\">\n                  Phone Record - Keep our conversations and discussions in order\n                </Label>\n                <Input \n                  type=\"text\"\n                  name=\"ClientName\"\n                  id=\"item\"\n                  placeholder=\"Client Name\"\n                  onChange={this.onChange}\n                />\n                <Input \n                  type=\"number\"\n                  name=\"ClientPhoneNumber\"\n                  id=\"item\"\n                  placeholder=\"Create Phone Number\"\n                  onChange={this.onChange}\n                />\n                <Input \n                  type=\"text\"\n                  name=\"ClientNotes\"\n                  id=\"item\"\n                  placeholder=\"Create coversation record\"\n                  onChange={this.onChange}\n                />\n                <Button\n                  color=\"dark\"\n                  style={{marginTop: '2rem'}}\n                  block\n                >\n                  Create Phone Record\n                </Button>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default ( RecordModal );","import React, { Component } from 'react';\nimport {\n  Button, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  Form, \n  FormGroup, \n  Label, \n  Input \n} from 'reactstrap';\n\nclass UpdateRecordModal extends Component {\n  state = {\n    modal: false,\n    ClientName: '',\n    ClientPhoneNumber: '',\n    ClientNotes: '',\n  }\n\n  // enterModal = async () => {\n  componentWillMount = async () => {\n    this.setState({\n      ClientName: this.props.record.ClientName,\n      ClientPhoneNumber: this.props.record.ClientPhoneNumber,\n      ClientNotes: this.props.record.ClientNotes,\n    })\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    console.log(this.state)\n    this.props.onSubmit(this.state)\n  }\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  onChange = (e) => {\n    console.log(this.state)\n    this.setState({ \n      [e.target.name]: e.target.value,   \n    });\n  }\n\n  onSubmit = async e => {\n    e.preventDefault();\n    await fetch(`https://salty-rogue-kitchen3.herokuapp.com/`+ this.props.record._id, {\n      method: \"PUT\",\n      body: JSON.stringify(this.state),\n      headers: {\n          \"Content-Type\": \"application/json\",\n        }\n      }\n    )\n    this.toggle();\n    this.props.refresh();//this refreshes the page after we're done\n  };\n    \n  newRecord = {\n    ClientName: this.state.ClientName,\n    ClientPhoneNumber: this.state.ClientPhoneNumber,\n    ClientNotes: this.state.ClientNotes\n  }\n\n  // componentDidMount() {\n  //   console.log(this.props.id)\n  // }\n\n  render() {\n    return(\n      <div>\n        <Button\n          color=\"dark\"\n          style={{marginBottom: '2rem'}}\n          onClick={this.toggle}\n        >\n          Update Record\n        </Button>\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n        >\n          <ModalHeader\n            toggle={this.toggle}\n          >\n            Update Record\n          </ModalHeader>\n          <ModalBody>\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup onSubmit={this.handleSubmit}>\n                <Label for=\"record\">\n                  Phone Record - Keep our conversations and discussions in order\n                </Label>\n                <Input \n                  type=\"text\"\n                  name=\"ClientName\"\n                  id=\"item\"\n                  // placeholder={Client Name}\n                  onChange={this.onChange}\n                  value={this.state.ClientName}\n                />\n                <Input \n                  type=\"number\"\n                  name=\"ClientPhoneNumber\"\n                  id=\"item\"\n                  // placeholder=\"Create Phone Number\"\n                  onChange={this.onChange}\n                  value={this.state.ClientPhoneNumber}\n                />\n                <Input \n                  type=\"text\"\n                  name=\"ClientNotes\"\n                  id=\"item\"\n                  // placeholder=\"Create coversation record\"\n                  onChange={this.onChange}\n                  value={this.state.ClientNotes}\n                />\n                <Button\n                  color=\"dark\"\n                  style={{marginTop: '2rem'}}\n                  block\n                >\n                  Update Phone Record\n                </Button>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default ( UpdateRecordModal );","import React, { Component } from \"react\";\nimport { Container, ListGroup, ListGroupItem, Button } from \"reactstrap\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport RecordModal from \"./components/RecordModal\";\nimport UpdateRecordModal from \"./components/UpdateRecordModal\";\n\nclass RecordList extends Component {\n  state = {\n    records: []\n  };\n\n  // try {\n  //   const response = await fetch('url');\n  //   if (response.ok) {\n  //     const data = response.json();\n\n  //   }\n  // } catch (err) {\n  //   //\n  // }\n\n  getRecords = async () => {\n    await fetch(\"https://salty-rogue-kitchen3.herokuapp.com/\")\n      .then(response => {\n        return response.json();\n      })\n      .then(data => this.setState({ records: data }))\n      .catch(error => console.log(\"Error:\", error)); // catches if the promise bums out\n  };\n  // Async return a projmise\n  // Maybe check response code?\n  onDeleteClick = async _id => {\n    await fetch(\"https://salty-rogue-kitchen3.herokuapp.com/\" + _id, {\n      method: \"DELETE\"\n    }).then(resp => {\n      this.getRecords();\n    });\n  };\n\n  // onEditClick = async (_id) => {\n  //   <UpdateRecordModal />\n  // }\n\n  componentWillMount() {\n    this.getRecords();\n  }\n\n  render() {\n    console.log(this);\n    console.log(this.state);\n    return (\n      <Container>\n        <RecordModal refresh={this.getRecords} />\n        {/* //takes function, assigns it a prop, to a child component. Child component can call the function because I'm passing it in. */}\n        <ListGroup>\n          <TransitionGroup className=\"Records-List\">\n            {this.state.records.map((record, _id) => (\n              <CSSTransition key={_id} timeout={500} classNames=\"fade\">\n                <ListGroupItem>\n                  <h5>Client Name: {record.ClientName}</h5>\n                  <h5>Client Phone Number: {record.ClientPhoneNumber}</h5>\n                  <h5>Notes: {record.ClientNotes}</h5>\n                  <Button\n                    className=\"remove-btn\"\n                    color=\"danger\"\n                    size=\"sm\"\n                    onClick={() => this.onDeleteClick(record._id)}\n                  >\n                    &times;\n                  </Button>\n\n                  <UpdateRecordModal\n                    record={record}\n                    refresh={this.getRecords}\n                  />\n                </ListGroupItem>\n              </CSSTransition>\n            ))}\n          </TransitionGroup>\n        </ListGroup>\n      </Container>\n    );\n  }\n}\n\nexport default RecordList;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport './App.css';\nimport Navigation from './components/Navigation'\nimport Home from './components/Home'\nimport Address from './components/address/Address'\nimport Records from './components/records/Records'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navigation />\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/Address' exact component={Address} />\n          <Route path='/Records' exact component={Records} />\n\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}